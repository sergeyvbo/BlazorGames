@using BlazorGames.Client.Games.OwlAttack.Models
@inject GameManager _gameManager

<div class="oa-game-container" tabindex="0" @onclick="@_gameManager.Start" @onkeydown="HandleKeyDown" @ontouchstart = "HandleTouchStart">
	<div class="oa-sky">
		<Owl Model="_gameManager.OwlModel"/>
		<Player Model="_gameManager.PlayerModel"/>
	</div>
	<div class="oa-ground">
	</div>
	<div class="oa-text">
		<text>Score: @_gameManager.PlayerModel.Score.ToString()</text>
		<text>Carry: @_gameManager.PlayerModel.Carry.ToString()</text>
		<p>High score: @_gameManager.HighScore </p>
	</div>
	
</div>

@code {

	protected override void OnInitialized()
	{
		_gameManager.FrameUpdated += (_, _) => StateHasChanged();
	}

	void HandleKeyDown(KeyboardEventArgs e)
	{
		switch (e.Key)
		{
			case "ArrowLeft":
				_gameManager.PlayerModel.Velocity = Math.Max(-_gameManager.PlayerModel.MaxVelocity, _gameManager.PlayerModel.Velocity - 1);
				break;
			case "ArrowRight":
				_gameManager.PlayerModel.Velocity = Math.Min(_gameManager.PlayerModel.MaxVelocity, _gameManager.PlayerModel.Velocity + 1);
				break;
			case "ArrowDown":
			case "ArrowUp":
				_gameManager.PlayerModel.Velocity = 0;
				break;
			default:
				return;
		}
	}

	void HandleTouchStart(TouchEventArgs e) 
	{
		if(e.Touches.Length > 1)
		{
			_gameManager.PlayerModel.Velocity = 0;
			return;
		}
		var touch = e.Touches.FirstOrDefault();
		if (touch is null) 
		{
			return;
		}

		if (touch.ScreenX > 300)
		{
			_gameManager.PlayerModel.Velocity = Math.Min(_gameManager.PlayerModel.MaxVelocity, _gameManager.PlayerModel.Velocity + 1);
			return;
		}
		_gameManager.PlayerModel.Velocity = Math.Max(-_gameManager.PlayerModel.MaxVelocity, _gameManager.PlayerModel.Velocity - 1);

	}
}
